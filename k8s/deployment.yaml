apiVersion: v1
data:
  Dockerfile: |
    FROM node:17.6.0 as base

    WORKDIR /code

    COPY package.json package.json

    FROM base as prod
    ENV NODE_ENV=production
    RUN npm ci --production
    COPY . .
    CMD [ "node", "server.js" ]
  package.json: |
    {
      "name": "nodewithtests",
      "version": "1.0.0",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test2": "cross-env NODE_ENV=test nyc --reporter=lcov --reporter=text mocha calc.js",
        "test": "mocha ./**/*.js",
        "start": "nodemon --inspect=0.0.0.0:9229 server.js",
        "testawesome": "mocha --reporter mochawesome ./**/*.js",
        "testnyc": "nyc --reporter=lcov --reporter=text-lcov mocha ./**/*.js"
      },
      "keywords": [
        "nodejs"
      ],
      "author": "Isaac Johnson",
      "license": "MIT",
      "devDependencies": {
        "@babel/cli": "^7.17.6",
        "@babel/preset-env": "^7.16.11",
        "@babel/register": "^7.17.7",
        "babel-plugin-istanbul": "^6.1.1",
        "chai": "^4.3.6",
        "cross-env": "^7.0.3",
        "expect.js": "^0.3.1",
        "jest": "^28.0.2",
        "mocha": "^9.2.2",
        "nyc": "^15.1.0"
      },
      "dependencies": {
        "mochawesome": "^7.1.3",
        "ronin-mocks": "^0.1.6",
        "ronin-server": "^0.1.3"
      },
      "nyc": {
        "require": [
          "@babel/register"
        ],
        "reporter": [
          "lcov",
          "text"
        ],
        "sourceMap": false,
        "instrument": true
      },
      "files": [
        "calculator.js"
      ]
    }
  server.js: |
    const ronin = require('ronin-server')
    const mocks = require('ronin-mocks')

    const server = ronin.server()
    const port = 1234

    server.use('/', mocks.server(server.Router(), false, true))
    server.start()
kind: ConfigMap
metadata:
  name: primary-file-vol
---
apiVersion: v1
kind: Pod
metadata:
  name: kaniko
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    args: ["--dockerfile=/workspace/Dockerfile",
            "--context=dir://workspace",
            "--destination=harbor.freshbrewed.science/freshbrewedprivate/dockerwithtests"]
    volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
      - name: dockerfile-storage
        mountPath: /workspace
  restartPolicy: Never
  volumes:
    - name: kaniko-secret
      secret:
        secretName: kanikoharborcred
        items:
          - key: .dockerconfigjson
            path: config.json
    - name: dockerfile-storage
      configMap:
         name: primary-file-vol2
---   
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx
spec:
  selector:
    matchLabels:
      run: my-nginx
  replicas: 3
  template:
    metadata:
      labels:
        run: my-nginx
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
      - name: harbor.freshbrewed.science/freshbrewedprivate/dockerwithtests:latest
        image: nginx
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-run-svc
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    run: my-nginx
